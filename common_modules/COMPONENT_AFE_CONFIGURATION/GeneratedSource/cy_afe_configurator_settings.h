/*******************************************************************************
* File Name: cy_afe_configurator_settings.h
*
* Description:
* Audio Front-End Middleware configuration
* This file should not be modified. It was automatically generated by
* Audio Front-End Configurator 1.40.0.2234
*
********************************************************************************
* Copyright 2025, Cypress Semiconductor Corporation (an Infineon company) 
* or an affiliate of Cypress Semiconductor Corporation.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

#ifndef AUDIO_FRONT_END_SETTINGS__H
#define AUDIO_FRONT_END_SETTINGS__H

#include "stdlib.h"
#include "stdint.h"

// Input setting options
#define AFE_INPUT_SOURCE_MIC    0
#define AFE_INPUT_SOURCE_USB    1

// USB Selection options
typedef enum {
    AFE_USB_SELECT_INPUT_0  = 0, // Input channel 0
    AFE_USB_SELECT_INPUT_1  = 1, // Input channel 1 (If the audio input is stereo)
    AFE_USB_SELECT_OUTPUT   = 2, // AFE output
    AFE_USB_SELECT_AEC_REF  = 3, // AEC Reference Input
    AFE_USB_SELECT_SIG_A_0  = 4, // AEC output on channel 0
    AFE_USB_SELECT_SIG_A_1  = 5, // AEC output on channel 1 (If the audio input is stereo)
    AFE_USB_SELECT_SIG_B    = 6, // Beam Forming output
    AFE_USB_SELECT_SIG_C    = 7  // Dereverberation output
} afe_usb_select_t;

// Parameter IDs
typedef enum {
    AFE_PARAM_ID_USB_CH0,
    AFE_PARAM_ID_USB_CH1,
    AFE_PARAM_ID_NUM_CHANNELS,
    AFE_PARAM_ID_FRAME_SIZE,
    AFE_PARAM_ID_FRAME_RATE,
    AFE_PARAM_ID_HPF_HZ,
    AFE_PARAM_ID_MIC_GAIN,
    AFE_PARAM_ID_INPUT_SOURCE,
    AFE_PARAM_ID_ECHO_TAIL,
    AFE_PARAM_ID_BULK_DELAY,
    AFE_PARAM_ID_AEC_REF_SOURCE,
    AFE_PARAM_ID_MIC_DIST,
    AFE_PARAM_ID_NUM_BEAMS,
    AFE_PARAM_ID_ANGLE_RANGE_A,
    AFE_PARAM_ID_ANGLE_RANGE_B,
    AFE_PARAM_ID_INTERFERENCE_CANCELLER,
    AFE_PARAM_ID_DEREVERBERATION,
    AFE_PARAM_ID_NOISE_SUPPRESSOR,
    AFE_PARAM_ID_ECHO_SUPPRESSOR
} afe_param_id_t;

// App settings structure
typedef struct afe_usb_settings
{
    afe_usb_select_t channel_0;
    afe_usb_select_t channel_1;
    afe_usb_select_t channel_2;
    afe_usb_select_t channel_3;
} afe_usb_settings_t;

extern afe_usb_settings_t MY_AFE_USB_SETTINGS;

// Static settings for application only
#define AFE_UART_BAUDRATE        115200
#define AFE_INPUT_SOURCE        AFE_INPUT_SOURCE_MIC
#define AFE_USE_USB_AEC_REF        0
#define AFE_USE_TARGET_SPEAKER        0
#define AFE_MIC_INPUT_GAIN_DB        0

// Static settings for middleware and application
#define AFE_INPUT_NUMBER_CHANNELS   2
#define AFE_CONFIG_BULK_DELAY       0
#define AFE_FRAME_SIZE_MS        10
#define AFE_FRAME_RATE_SPS        16000

// Filters in use
#define ENABLE_IFX_AEC
#define ENABLE_IFX_BF
#define ENABLE_IFX_DRVB
#define ENABLE_IFX_HPF
#define ENABLE_IFX_DSNS
#define ENABLE_IFX_ES
#define ENABLE_IFX_ANALYSIS
#define ENABLE_IFX_SYNTHESIS


// Size of the filter settings
#define AFE_FILTER_SETTING_SIZE        39
// Size of the MW settings
#define AFE_MW_SETTINGS_SIZE        16500

// Filter static settings
extern uint8_t MY_AFE_FILTER_SETTINGS[];
extern uint32_t AFE_FILTER_SETTINGS[];
extern uint8_t AFE_MW_SETTINGS[];

#endif /*AUDIO_FRONT_END_SETTINGS__H*/
